# .github/workflows/cicd.yml
name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: example
          MYSQL_DATABASE: demo
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost" --health-interval=3s --health-timeout=3s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # -----------------------------
      # Build Docker Images
      # -----------------------------
      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          tags: backend:test
          load: true

      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          tags: frontend:test
          load: true

      # -----------------------------
      # Save images as artifacts
      # -----------------------------
      - name: Save backend Docker image
        run: docker save backend:test -o backend-image.tar

      - name: Save frontend Docker image
        run: docker save frontend:test -o frontend-image.tar

      - name: Upload backend image artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-image
          path: backend-image.tar

      - name: Upload frontend image artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-image
          path: frontend-image.tar

      # -----------------------------
      # Wait for MySQL and initialize
      # -----------------------------
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            if mysql -h127.0.0.1 -uroot -pexample -e "USE demo;" ; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 3
          done

      - name: Initialize database schema and user
        run: mysql -h127.0.0.1 -uroot -pexample demo < backend/init.sql

      # -----------------------------
      # Test backend container
      # -----------------------------
      - name: Test backend container
        run: |
          docker run --rm --network host \
            -e PORT=5000 \
            -e DB_HOST=localhost \
            -e DB_USER=testuser \
            -e DB_PASSWORD=testpass \
            -e DB_NAME=demo backend:test & \
          sleep 5
          curl -f http://localhost:5000/api/users

      # -----------------------------
      # Test frontend container
      # -----------------------------
      - name: Test frontend container
        run: |
          docker run --rm --network host \
            -e PORT=3000 \
            -e BACKEND_URL=http://localhost:5000 frontend:test & \
          sleep 5
          curl -f http://localhost:3000/
