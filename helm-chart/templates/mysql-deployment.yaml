apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: mysql
          image: {{ .Values.db.image }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.db.rootPassword | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.db.database | quote }}
            - name: MYSQL_USER
              value: {{ .Values.db.user | quote }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.db.password | quote }}
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
# One-shot Job to initialize DB schema and seed data
apiVersion: batch/v1
kind: Job
metadata:
  name: db-init
spec:
  template:
    spec:
      containers:
        - name: db-init
          image: {{ .Values.db.image }}
          command: ["/bin/sh", "-c"]
          args:
            - >
              mysql -h db -P 3306 -u{{ .Values.db.user }} -p{{ .Values.db.password }} {{ .Values.db.database }} < /sql/init.sql;
          volumeMounts:
            - name: init-sql
              mountPath: /sql
      restartPolicy: OnFailure
      volumes:
        - name: init-sql
          configMap:
            name: db-init-sql
---
# ConfigMap containing init.sql
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init-sql
data:
  init.sql: |
{{ .Files.Get "backend/init.sql" | indent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
